// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cnnshift_arr_buffer_ap_fixed_ap_fixed_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_V_address0,
        data_V_ce0,
        data_V_q0,
        output_V_address0,
        output_V_ce0,
        output_V_we0,
        output_V_d0,
        output_V_q0
);

parameter    ap_ST_fsm_state1 = 25'd1;
parameter    ap_ST_fsm_state2 = 25'd2;
parameter    ap_ST_fsm_state3 = 25'd4;
parameter    ap_ST_fsm_state4 = 25'd8;
parameter    ap_ST_fsm_state5 = 25'd16;
parameter    ap_ST_fsm_state6 = 25'd32;
parameter    ap_ST_fsm_state7 = 25'd64;
parameter    ap_ST_fsm_state8 = 25'd128;
parameter    ap_ST_fsm_state9 = 25'd256;
parameter    ap_ST_fsm_state10 = 25'd512;
parameter    ap_ST_fsm_state11 = 25'd1024;
parameter    ap_ST_fsm_state12 = 25'd2048;
parameter    ap_ST_fsm_state13 = 25'd4096;
parameter    ap_ST_fsm_state14 = 25'd8192;
parameter    ap_ST_fsm_state15 = 25'd16384;
parameter    ap_ST_fsm_state16 = 25'd32768;
parameter    ap_ST_fsm_state17 = 25'd65536;
parameter    ap_ST_fsm_state18 = 25'd131072;
parameter    ap_ST_fsm_state19 = 25'd262144;
parameter    ap_ST_fsm_state20 = 25'd524288;
parameter    ap_ST_fsm_state21 = 25'd1048576;
parameter    ap_ST_fsm_state22 = 25'd2097152;
parameter    ap_ST_fsm_state23 = 25'd4194304;
parameter    ap_ST_fsm_state24 = 25'd8388608;
parameter    ap_ST_fsm_state25 = 25'd16777216;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [1:0] data_V_address0;
output   data_V_ce0;
input  [15:0] data_V_q0;
output  [4:0] output_V_address0;
output   output_V_ce0;
output   output_V_we0;
output  [15:0] output_V_d0;
input  [15:0] output_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_V_ce0;
reg[4:0] output_V_address0;
reg output_V_ce0;
reg output_V_we0;
reg[15:0] output_V_d0;

(* fsm_encoding = "none" *) reg   [24:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] linebuffer_V_5_address0;
reg    linebuffer_V_5_ce0;
reg    linebuffer_V_5_we0;
reg   [15:0] linebuffer_V_5_d0;
wire   [15:0] linebuffer_V_5_q0;
wire   [15:0] tmpinput_V_q0;
reg   [15:0] reg_255;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state24;
wire   [1:0] i0_fu_267_p2;
reg   [1:0] i0_reg_785;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln177_fu_261_p2;
reg   [15:0] data_V_load_reg_795;
wire    ap_CS_fsm_state3;
wire   [8:0] zext_ln203_fu_278_p1;
reg   [8:0] zext_ln203_reg_800;
wire    ap_CS_fsm_state4;
wire   [6:0] zext_ln203_24_fu_282_p1;
reg   [6:0] zext_ln203_24_reg_806;
wire   [5:0] zext_ln203_25_fu_286_p1;
reg   [5:0] zext_ln203_25_reg_811;
wire   [4:0] zext_ln203_26_fu_290_p1;
reg   [4:0] zext_ln203_26_reg_816;
wire   [1:0] xor_ln182_fu_315_p2;
reg   [1:0] xor_ln182_reg_825;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln180_fu_309_p2;
wire   [1:0] add_ln187_fu_321_p2;
reg   [1:0] add_ln187_reg_831;
wire   [4:0] add_ln182_fu_347_p2;
reg   [4:0] add_ln182_reg_838;
wire    ap_CS_fsm_state6;
wire  signed [4:0] sub_ln187_fu_366_p2;
reg  signed [4:0] sub_ln187_reg_843;
wire   [5:0] add_ln187_3_fu_376_p2;
reg   [5:0] add_ln187_3_reg_848;
wire    ap_CS_fsm_state7;
wire   [6:0] add_ln203_15_fu_398_p2;
reg   [6:0] add_ln203_15_reg_863;
wire   [7:0] zext_ln187_fu_403_p1;
reg   [7:0] zext_ln187_reg_868;
reg   [7:0] linebuffer_V_5_addr_1_reg_874;
reg   [15:0] tmp_V_reg_879;
wire   [5:0] i2_fu_420_p2;
reg   [5:0] i2_reg_887;
wire    ap_CS_fsm_state9;
wire   [7:0] add_ln203_17_fu_438_p2;
reg   [7:0] add_ln203_17_reg_892;
wire   [0:0] icmp_ln189_fu_414_p2;
wire   [6:0] trunc_ln203_fu_443_p1;
reg   [6:0] trunc_ln203_reg_897;
wire   [7:0] add_ln203_19_fu_459_p2;
reg   [7:0] add_ln203_19_reg_902;
wire   [6:0] trunc_ln203_1_fu_464_p1;
reg   [6:0] trunc_ln203_1_reg_907;
wire   [1:0] sub_ln195_fu_468_p2;
reg   [1:0] sub_ln195_reg_912;
wire   [1:0] i1_fu_474_p2;
reg   [1:0] i1_reg_918;
wire   [8:0] add_ln203_18_fu_496_p2;
reg   [8:0] add_ln203_18_reg_923;
wire    ap_CS_fsm_state10;
wire   [8:0] add_ln203_20_fu_517_p2;
reg   [8:0] add_ln203_20_reg_928;
wire    ap_CS_fsm_state11;
reg   [15:0] linebuffer_V_5_load_reg_938;
wire    ap_CS_fsm_state12;
wire   [4:0] add_ln203_16_fu_550_p2;
reg   [4:0] add_ln203_16_reg_943;
wire    ap_CS_fsm_state14;
wire   [1:0] i0_3_fu_569_p2;
reg   [1:0] i0_3_reg_951;
wire    ap_CS_fsm_state16;
wire  signed [4:0] sext_ln126_fu_597_p1;
reg  signed [4:0] sext_ln126_reg_956;
wire   [0:0] icmp_ln122_fu_563_p2;
wire   [4:0] zext_ln126_13_fu_607_p1;
reg   [4:0] zext_ln126_13_reg_961;
wire   [1:0] i1_6_fu_617_p2;
reg   [1:0] i1_6_reg_969;
wire    ap_CS_fsm_state17;
wire   [4:0] or_ln1_fu_623_p4;
reg   [4:0] or_ln1_reg_974;
wire   [0:0] icmp_ln124_fu_611_p2;
wire   [5:0] zext_ln126_14_fu_633_p1;
reg   [5:0] zext_ln126_14_reg_979;
wire   [1:0] i2_6_fu_647_p2;
reg   [1:0] i2_6_reg_987;
wire    ap_CS_fsm_state18;
wire   [5:0] add_ln126_9_fu_662_p2;
reg   [5:0] add_ln126_9_reg_992;
wire   [0:0] icmp_ln125_fu_641_p2;
wire   [4:0] add_ln126_12_fu_672_p2;
reg   [4:0] add_ln126_12_reg_997;
wire    ap_CS_fsm_state19;
reg   [15:0] output_V_load_reg_1007;
wire    ap_CS_fsm_state20;
wire   [1:0] i1_5_fu_695_p2;
reg   [1:0] i1_5_reg_1015;
wire    ap_CS_fsm_state22;
wire   [4:0] or_ln_fu_701_p4;
reg   [4:0] or_ln_reg_1020;
wire   [0:0] icmp_ln131_fu_689_p2;
wire   [4:0] sub_ln203_fu_727_p2;
reg   [4:0] sub_ln203_reg_1025;
wire   [1:0] i2_5_fu_743_p2;
reg   [1:0] i2_5_reg_1033;
wire    ap_CS_fsm_state23;
wire   [4:0] add_ln134_1_fu_759_p2;
reg   [4:0] add_ln134_1_reg_1038;
wire   [0:0] icmp_ln133_fu_737_p2;
reg   [3:0] tmpinput_V_address0;
reg    tmpinput_V_ce0;
reg    tmpinput_V_we0;
reg   [15:0] tmpinput_V_d0;
reg   [1:0] i0_0_reg_165;
reg   [1:0] i1_0_reg_177;
wire    ap_CS_fsm_state15;
reg   [5:0] i2_0_reg_189;
wire    ap_CS_fsm_state13;
reg   [1:0] i0_0_i_reg_200;
reg   [1:0] i1_0_i_reg_211;
reg   [1:0] i2_0_i_reg_222;
wire    ap_CS_fsm_state21;
reg   [1:0] i11_0_i_reg_233;
reg   [1:0] i22_0_i_reg_244;
wire    ap_CS_fsm_state25;
wire   [63:0] zext_ln179_fu_273_p1;
wire   [63:0] zext_ln203_28_fu_304_p1;
wire  signed [63:0] sext_ln182_fu_381_p1;
wire  signed [63:0] sext_ln187_2_fu_388_p1;
wire   [63:0] zext_ln203_29_fu_409_p1;
wire   [63:0] zext_ln203_39_fu_522_p1;
wire   [63:0] zext_ln203_36_fu_526_p1;
wire  signed [63:0] sext_ln203_1_fu_555_p1;
wire   [63:0] zext_ln126_3_fu_677_p1;
wire   [63:0] zext_ln126_fu_684_p1;
wire  signed [63:0] sext_ln203_2_fu_773_p1;
wire   [63:0] zext_ln134_fu_778_p1;
wire   [3:0] zext_ln203_27_fu_294_p1;
wire   [3:0] add_ln203_fu_298_p2;
wire   [3:0] tmp_24_fu_330_p3;
wire   [4:0] zext_ln182_3_fu_337_p1;
wire   [4:0] zext_ln182_fu_327_p1;
wire   [4:0] sub_ln182_fu_341_p2;
wire   [3:0] tmp_25_fu_355_p3;
wire   [4:0] zext_ln187_7_fu_362_p1;
wire   [4:0] zext_ln187_6_fu_352_p1;
wire  signed [5:0] sext_ln187_1_fu_372_p1;
wire  signed [6:0] sext_ln187_fu_385_p1;
wire   [6:0] add_ln203_14_fu_392_p2;
wire  signed [7:0] sext_ln203_fu_406_p1;
wire   [6:0] tmp_28_fu_426_p3;
wire   [7:0] zext_ln203_34_fu_434_p1;
wire   [6:0] tmp_30_fu_447_p3;
wire   [7:0] zext_ln203_37_fu_455_p1;
wire   [8:0] p_shl_cast_fu_483_p3;
wire   [8:0] zext_ln203_35_fu_480_p1;
wire   [8:0] sub_ln203_2_fu_490_p2;
wire   [8:0] p_shl1_cast_fu_504_p3;
wire   [8:0] zext_ln203_38_fu_501_p1;
wire   [8:0] sub_ln203_3_fu_511_p2;
wire   [3:0] tmp_27_fu_533_p3;
wire   [4:0] zext_ln203_33_fu_540_p1;
wire   [4:0] zext_ln203_32_fu_530_p1;
wire   [4:0] sub_ln203_1_fu_544_p2;
wire   [0:0] trunc_ln126_fu_575_p1;
wire   [2:0] shl_ln_fu_579_p3;
wire   [3:0] zext_ln126_12_fu_587_p1;
wire   [3:0] zext_ln122_fu_559_p1;
wire  signed [3:0] sub_ln126_fu_591_p2;
wire   [3:0] add_ln126_fu_601_p2;
wire   [4:0] zext_ln125_fu_637_p1;
wire   [4:0] add_ln126_10_fu_653_p2;
wire  signed [5:0] sext_ln126_4_fu_658_p1;
wire   [4:0] add_ln126_11_fu_667_p2;
wire  signed [31:0] sext_ln126_3_fu_681_p1;
wire   [3:0] tmp_26_fu_715_p3;
wire   [4:0] zext_ln203_31_fu_723_p1;
wire   [4:0] zext_ln203_30_fu_711_p1;
wire   [3:0] zext_ln133_fu_733_p1;
wire   [3:0] add_ln134_fu_749_p2;
wire   [4:0] zext_ln134_5_fu_755_p1;
wire   [4:0] zext_ln203_40_fu_764_p1;
wire   [4:0] add_ln203_21_fu_768_p2;
reg   [24:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 25'd1;
end

cnnshift_arr_buffer_ap_fixed_ap_fixed_config2_s_linebuffebkb #(
    .DataWidth( 16 ),
    .AddressRange( 204 ),
    .AddressWidth( 8 ))
linebuffer_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_5_address0),
    .ce0(linebuffer_V_5_ce0),
    .we0(linebuffer_V_5_we0),
    .d0(linebuffer_V_5_d0),
    .q0(linebuffer_V_5_q0)
);

cnnshift_arr_buffer_ap_fixed_ap_fixed_config2_s_tmpinput_V #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
tmpinput_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmpinput_V_address0),
    .ce0(tmpinput_V_ce0),
    .we0(tmpinput_V_we0),
    .d0(tmpinput_V_d0),
    .q0(tmpinput_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln177_fu_261_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i0_0_i_reg_200 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln124_fu_611_p2 == 1'd1))) begin
        i0_0_i_reg_200 <= i0_3_reg_951;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln180_fu_309_p2 == 1'd1))) begin
        i0_0_reg_165 <= i0_reg_785;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i0_0_reg_165 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln122_fu_563_p2 == 1'd1))) begin
        i11_0_i_reg_233 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln133_fu_737_p2 == 1'd1))) begin
        i11_0_i_reg_233 <= i1_5_reg_1015;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln125_fu_641_p2 == 1'd1))) begin
        i1_0_i_reg_211 <= i1_6_reg_969;
    end else if (((icmp_ln122_fu_563_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        i1_0_i_reg_211 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        i1_0_reg_177 <= i1_reg_918;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        i1_0_reg_177 <= 2'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln131_fu_689_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        i22_0_i_reg_244 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        i22_0_i_reg_244 <= i2_5_reg_1033;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln124_fu_611_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        i2_0_i_reg_222 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        i2_0_i_reg_222 <= i2_6_reg_987;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i2_0_reg_189 <= i2_reg_887;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        i2_0_reg_189 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_fu_641_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        add_ln126_12_reg_997 <= add_ln126_12_fu_672_p2;
        add_ln126_9_reg_992 <= add_ln126_9_fu_662_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln133_fu_737_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        add_ln134_1_reg_1038 <= add_ln134_1_fu_759_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln182_reg_838 <= add_ln182_fu_347_p2;
        add_ln187_3_reg_848 <= add_ln187_3_fu_376_p2;
        sub_ln187_reg_843 <= sub_ln187_fu_366_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln180_fu_309_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        add_ln187_reg_831 <= add_ln187_fu_321_p2;
        xor_ln182_reg_825 <= xor_ln182_fu_315_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln203_15_reg_863 <= add_ln203_15_fu_398_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        add_ln203_16_reg_943 <= add_ln203_16_fu_550_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln189_fu_414_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        add_ln203_17_reg_892 <= add_ln203_17_fu_438_p2;
        add_ln203_19_reg_902 <= add_ln203_19_fu_459_p2;
        trunc_ln203_1_reg_907 <= trunc_ln203_1_fu_464_p1;
        trunc_ln203_reg_897 <= trunc_ln203_fu_443_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln203_18_reg_923 <= add_ln203_18_fu_496_p2;
        add_ln203_20_reg_928 <= add_ln203_20_fu_517_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        data_V_load_reg_795 <= data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        i0_3_reg_951 <= i0_3_fu_569_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i0_reg_785 <= i0_fu_267_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        i1_5_reg_1015 <= i1_5_fu_695_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        i1_6_reg_969 <= i1_6_fu_617_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln189_fu_414_p2 == 1'd1))) begin
        i1_reg_918 <= i1_fu_474_p2;
        sub_ln195_reg_912 <= sub_ln195_fu_468_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        i2_5_reg_1033 <= i2_5_fu_743_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        i2_6_reg_987 <= i2_6_fu_647_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        i2_reg_887 <= i2_fu_420_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        linebuffer_V_5_addr_1_reg_874 <= zext_ln203_29_fu_409_p1;
        tmp_V_reg_879 <= linebuffer_V_5_q0;
        zext_ln187_reg_868[1 : 0] <= zext_ln187_fu_403_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        linebuffer_V_5_load_reg_938 <= linebuffer_V_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln124_fu_611_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        or_ln1_reg_974[1 : 0] <= or_ln1_fu_623_p4[1 : 0];
or_ln1_reg_974[4 : 3] <= or_ln1_fu_623_p4[4 : 3];
        zext_ln126_14_reg_979[1 : 0] <= zext_ln126_14_fu_633_p1[1 : 0];
zext_ln126_14_reg_979[4 : 3] <= zext_ln126_14_fu_633_p1[4 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln131_fu_689_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        or_ln_reg_1020[1 : 0] <= or_ln_fu_701_p4[1 : 0];
or_ln_reg_1020[4 : 3] <= or_ln_fu_701_p4[4 : 3];
        sub_ln203_reg_1025 <= sub_ln203_fu_727_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        output_V_load_reg_1007 <= output_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_255 <= tmpinput_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln122_fu_563_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        sext_ln126_reg_956 <= sext_ln126_fu_597_p1;
        zext_ln126_13_reg_961[3 : 0] <= zext_ln126_13_fu_607_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        zext_ln203_24_reg_806[1 : 0] <= zext_ln203_24_fu_282_p1[1 : 0];
        zext_ln203_25_reg_811[1 : 0] <= zext_ln203_25_fu_286_p1[1 : 0];
        zext_ln203_26_reg_816[1 : 0] <= zext_ln203_26_fu_290_p1[1 : 0];
        zext_ln203_reg_800[1 : 0] <= zext_ln203_fu_278_p1[1 : 0];
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state22) & (icmp_ln131_fu_689_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln131_fu_689_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_V_ce0 = 1'b1;
    end else begin
        data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        linebuffer_V_5_address0 = zext_ln203_36_fu_526_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        linebuffer_V_5_address0 = zext_ln203_39_fu_522_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        linebuffer_V_5_address0 = linebuffer_V_5_addr_1_reg_874;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        linebuffer_V_5_address0 = sext_ln187_2_fu_388_p1;
    end else begin
        linebuffer_V_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7))) begin
        linebuffer_V_5_ce0 = 1'b1;
    end else begin
        linebuffer_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        linebuffer_V_5_d0 = linebuffer_V_5_load_reg_938;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        linebuffer_V_5_d0 = reg_255;
    end else begin
        linebuffer_V_5_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((1'b1 == ap_CS_fsm_state9) & (icmp_ln189_fu_414_p2 == 1'd1)))) begin
        linebuffer_V_5_we0 = 1'b1;
    end else begin
        linebuffer_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_V_address0 = zext_ln134_fu_778_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        output_V_address0 = zext_ln126_fu_684_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        output_V_address0 = zext_ln126_3_fu_677_p1;
    end else begin
        output_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19))) begin
        output_V_ce0 = 1'b1;
    end else begin
        output_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_V_d0 = reg_255;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        output_V_d0 = output_V_load_reg_1007;
    end else begin
        output_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21))) begin
        output_V_we0 = 1'b1;
    end else begin
        output_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        tmpinput_V_address0 = sext_ln203_2_fu_773_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        tmpinput_V_address0 = sext_ln203_1_fu_555_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        tmpinput_V_address0 = sext_ln182_fu_381_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmpinput_V_address0 = zext_ln203_28_fu_304_p1;
    end else begin
        tmpinput_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state4))) begin
        tmpinput_V_ce0 = 1'b1;
    end else begin
        tmpinput_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        tmpinput_V_d0 = tmp_V_reg_879;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmpinput_V_d0 = data_V_load_reg_795;
    end else begin
        tmpinput_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state4))) begin
        tmpinput_V_we0 = 1'b1;
    end else begin
        tmpinput_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln177_fu_261_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln180_fu_309_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln189_fu_414_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln122_fu_563_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln124_fu_611_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln125_fu_641_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln131_fu_689_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln133_fu_737_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln126_10_fu_653_p2 = ($signed(sext_ln126_reg_956) + $signed(zext_ln125_fu_637_p1));

assign add_ln126_11_fu_667_p2 = (zext_ln126_13_reg_961 + zext_ln125_fu_637_p1);

assign add_ln126_12_fu_672_p2 = (add_ln126_11_fu_667_p2 + or_ln1_reg_974);

assign add_ln126_9_fu_662_p2 = ($signed(sext_ln126_4_fu_658_p1) + $signed(zext_ln126_14_reg_979));

assign add_ln126_fu_601_p2 = ($signed(4'd3) + $signed(sub_ln126_fu_591_p2));

assign add_ln134_1_fu_759_p2 = (or_ln_reg_1020 + zext_ln134_5_fu_755_p1);

assign add_ln134_fu_749_p2 = (zext_ln133_fu_733_p1 + 4'd6);

assign add_ln182_fu_347_p2 = (sub_ln182_fu_341_p2 + zext_ln203_26_reg_816);

assign add_ln187_3_fu_376_p2 = ($signed(sext_ln187_1_fu_372_p1) + $signed(zext_ln203_25_reg_811));

assign add_ln187_fu_321_p2 = ($signed(i1_0_reg_177) + $signed(2'd3));

assign add_ln203_14_fu_392_p2 = ($signed(sext_ln187_fu_385_p1) + $signed(7'd70));

assign add_ln203_15_fu_398_p2 = (add_ln203_14_fu_392_p2 + zext_ln203_24_reg_806);

assign add_ln203_16_fu_550_p2 = (sub_ln203_1_fu_544_p2 + zext_ln203_26_reg_816);

assign add_ln203_17_fu_438_p2 = (zext_ln203_34_fu_434_p1 + zext_ln187_reg_868);

assign add_ln203_18_fu_496_p2 = (sub_ln203_2_fu_490_p2 + zext_ln203_reg_800);

assign add_ln203_19_fu_459_p2 = (zext_ln203_37_fu_455_p1 + zext_ln187_reg_868);

assign add_ln203_20_fu_517_p2 = (sub_ln203_3_fu_511_p2 + zext_ln203_reg_800);

assign add_ln203_21_fu_768_p2 = (sub_ln203_reg_1025 + zext_ln203_40_fu_764_p1);

assign add_ln203_fu_298_p2 = (zext_ln203_27_fu_294_p1 + 4'd6);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign data_V_address0 = zext_ln179_fu_273_p1;

assign i0_3_fu_569_p2 = (i0_0_i_reg_200 + 2'd1);

assign i0_fu_267_p2 = (i0_0_reg_165 + 2'd1);

assign i1_5_fu_695_p2 = (i11_0_i_reg_233 + 2'd1);

assign i1_6_fu_617_p2 = (i1_0_i_reg_211 + 2'd1);

assign i1_fu_474_p2 = (i1_0_reg_177 + 2'd1);

assign i2_5_fu_743_p2 = (i22_0_i_reg_244 + 2'd1);

assign i2_6_fu_647_p2 = (i2_0_i_reg_222 + 2'd1);

assign i2_fu_420_p2 = (i2_0_reg_189 + 6'd1);

assign icmp_ln122_fu_563_p2 = ((i0_0_i_reg_200 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln124_fu_611_p2 = ((i1_0_i_reg_211 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln125_fu_641_p2 = ((i2_0_i_reg_222 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln131_fu_689_p2 = ((i11_0_i_reg_233 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln133_fu_737_p2 = ((i22_0_i_reg_244 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln177_fu_261_p2 = ((i0_0_reg_165 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln180_fu_309_p2 = ((i1_0_reg_177 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln189_fu_414_p2 = ((i2_0_reg_189 == 6'd33) ? 1'b1 : 1'b0);

assign or_ln1_fu_623_p4 = {{{i1_0_i_reg_211}, {1'd0}}, {i1_0_i_reg_211}};

assign or_ln_fu_701_p4 = {{{i11_0_i_reg_233}, {1'd0}}, {i11_0_i_reg_233}};

assign p_shl1_cast_fu_504_p3 = {{trunc_ln203_1_reg_907}, {2'd0}};

assign p_shl_cast_fu_483_p3 = {{trunc_ln203_reg_897}, {2'd0}};

assign sext_ln126_3_fu_681_p1 = $signed(add_ln126_9_reg_992);

assign sext_ln126_4_fu_658_p1 = $signed(add_ln126_10_fu_653_p2);

assign sext_ln126_fu_597_p1 = sub_ln126_fu_591_p2;

assign sext_ln182_fu_381_p1 = $signed(add_ln182_reg_838);

assign sext_ln187_1_fu_372_p1 = sub_ln187_fu_366_p2;

assign sext_ln187_2_fu_388_p1 = $signed(add_ln187_3_reg_848);

assign sext_ln187_fu_385_p1 = sub_ln187_reg_843;

assign sext_ln203_1_fu_555_p1 = $signed(add_ln203_16_reg_943);

assign sext_ln203_2_fu_773_p1 = $signed(add_ln203_21_fu_768_p2);

assign sext_ln203_fu_406_p1 = $signed(add_ln203_15_reg_863);

assign shl_ln_fu_579_p3 = {{trunc_ln126_fu_575_p1}, {2'd0}};

assign sub_ln126_fu_591_p2 = (zext_ln126_12_fu_587_p1 - zext_ln122_fu_559_p1);

assign sub_ln182_fu_341_p2 = (zext_ln182_3_fu_337_p1 - zext_ln182_fu_327_p1);

assign sub_ln187_fu_366_p2 = (zext_ln187_7_fu_362_p1 - zext_ln187_6_fu_352_p1);

assign sub_ln195_fu_468_p2 = ($signed(2'd2) - $signed(i1_0_reg_177));

assign sub_ln203_1_fu_544_p2 = (zext_ln203_33_fu_540_p1 - zext_ln203_32_fu_530_p1);

assign sub_ln203_2_fu_490_p2 = (p_shl_cast_fu_483_p3 - zext_ln203_35_fu_480_p1);

assign sub_ln203_3_fu_511_p2 = (p_shl1_cast_fu_504_p3 - zext_ln203_38_fu_501_p1);

assign sub_ln203_fu_727_p2 = (zext_ln203_31_fu_723_p1 - zext_ln203_30_fu_711_p1);

assign tmp_24_fu_330_p3 = {{xor_ln182_reg_825}, {2'd0}};

assign tmp_25_fu_355_p3 = {{add_ln187_reg_831}, {2'd0}};

assign tmp_26_fu_715_p3 = {{i11_0_i_reg_233}, {2'd0}};

assign tmp_27_fu_533_p3 = {{sub_ln195_reg_912}, {2'd0}};

assign tmp_28_fu_426_p3 = {{i2_0_reg_189}, {1'd0}};

assign tmp_30_fu_447_p3 = {{i2_fu_420_p2}, {1'd0}};

assign trunc_ln126_fu_575_p1 = i0_0_i_reg_200[0:0];

assign trunc_ln203_1_fu_464_p1 = add_ln203_19_fu_459_p2[6:0];

assign trunc_ln203_fu_443_p1 = add_ln203_17_fu_438_p2[6:0];

assign xor_ln182_fu_315_p2 = (i1_0_reg_177 ^ 2'd3);

assign zext_ln122_fu_559_p1 = i0_0_i_reg_200;

assign zext_ln125_fu_637_p1 = i2_0_i_reg_222;

assign zext_ln126_12_fu_587_p1 = shl_ln_fu_579_p3;

assign zext_ln126_13_fu_607_p1 = add_ln126_fu_601_p2;

assign zext_ln126_14_fu_633_p1 = or_ln1_fu_623_p4;

assign zext_ln126_3_fu_677_p1 = add_ln126_12_reg_997;

assign zext_ln126_fu_684_p1 = $unsigned(sext_ln126_3_fu_681_p1);

assign zext_ln133_fu_733_p1 = i22_0_i_reg_244;

assign zext_ln134_5_fu_755_p1 = add_ln134_fu_749_p2;

assign zext_ln134_fu_778_p1 = add_ln134_1_reg_1038;

assign zext_ln179_fu_273_p1 = i0_0_reg_165;

assign zext_ln182_3_fu_337_p1 = tmp_24_fu_330_p3;

assign zext_ln182_fu_327_p1 = xor_ln182_reg_825;

assign zext_ln187_6_fu_352_p1 = add_ln187_reg_831;

assign zext_ln187_7_fu_362_p1 = tmp_25_fu_355_p3;

assign zext_ln187_fu_403_p1 = add_ln187_reg_831;

assign zext_ln203_24_fu_282_p1 = i0_0_reg_165;

assign zext_ln203_25_fu_286_p1 = i0_0_reg_165;

assign zext_ln203_26_fu_290_p1 = i0_0_reg_165;

assign zext_ln203_27_fu_294_p1 = i0_0_reg_165;

assign zext_ln203_28_fu_304_p1 = add_ln203_fu_298_p2;

assign zext_ln203_29_fu_409_p1 = $unsigned(sext_ln203_fu_406_p1);

assign zext_ln203_30_fu_711_p1 = i11_0_i_reg_233;

assign zext_ln203_31_fu_723_p1 = tmp_26_fu_715_p3;

assign zext_ln203_32_fu_530_p1 = sub_ln195_reg_912;

assign zext_ln203_33_fu_540_p1 = tmp_27_fu_533_p3;

assign zext_ln203_34_fu_434_p1 = tmp_28_fu_426_p3;

assign zext_ln203_35_fu_480_p1 = add_ln203_17_reg_892;

assign zext_ln203_36_fu_526_p1 = add_ln203_18_reg_923;

assign zext_ln203_37_fu_455_p1 = tmp_30_fu_447_p3;

assign zext_ln203_38_fu_501_p1 = add_ln203_19_reg_902;

assign zext_ln203_39_fu_522_p1 = add_ln203_20_reg_928;

assign zext_ln203_40_fu_764_p1 = i22_0_i_reg_244;

assign zext_ln203_fu_278_p1 = i0_0_reg_165;

always @ (posedge ap_clk) begin
    zext_ln203_reg_800[8:2] <= 7'b0000000;
    zext_ln203_24_reg_806[6:2] <= 5'b00000;
    zext_ln203_25_reg_811[5:2] <= 4'b0000;
    zext_ln203_26_reg_816[4:2] <= 3'b000;
    zext_ln187_reg_868[7:2] <= 6'b000000;
    zext_ln126_13_reg_961[4] <= 1'b0;
    or_ln1_reg_974[2] <= 1'b0;
    zext_ln126_14_reg_979[2] <= 1'b0;
    zext_ln126_14_reg_979[5] <= 1'b0;
    or_ln_reg_1020[2] <= 1'b0;
end

endmodule //cnnshift_arr_buffer_ap_fixed_ap_fixed_config2_s

// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2d_cl_me_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_w2_V_H__
#define __conv_2d_cl_me_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_w2_V_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2d_cl_me_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_w2_V_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 191;
  static const unsigned AddressRange = 27;
  static const unsigned AddressWidth = 5;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2d_cl_me_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_w2_V_ram) {
        ram[0] = "0b11101000000111111000011000100111101111011000101111011111110111101111101111111000001000110000011111110000010111100000010111111111011111011111111111011111110000001000000000000111100000110000000";
        ram[1] = "0b00001000100111100000110000001000000000001111011000011000101000000000010000001111101111101111111000000000100111011000010111111111110000000000000000100000000000011111001000111111101111111000010";
        ram[2] = "0b00010000110000001000101000000000000000100000011111100111110000000111110111010111110000100111101000010111100111100111101111111000010111011111011111101000000111111111010111100000010111101000101";
        ram[3] = "0b10110111010000111000100111010000101000011000110111011111101000011111010000011000110000001000011000001001001111011000000000011111010110111111001111100000110111110111101111010111111111100111110";
        ram[4] = "0b11010000000000001001000111010000011111101000000000100000010000100000111000000111011111111111110000011000111000101111000111011111001111100111100000011111011000101111011000111111011111101000010";
        ram[5] = "0b11010000101111101000010111001000000000110111101111110111110000000111101111001111011000010111011000111000001000000111111111100111110111110111010111110111010000000000101000010111001111111000110";
        ram[6] = "0b11100110111000111000101000011000010000000000001000010111010000001111010000001001011000000000110111101001010111110111110000010000010000010111100111111000100000101111111111011000010000011111000";
        ram[7] = "0b00011000011111100000111000101111100000011111100000101000101000011000010000100000001111111000000111110111110000000111010111101111111000110001000000101000001000011000101000000111011111111111110";
        ram[8] = "0b00001000111111011000011000110000001001001111001000011111101111001000000111000000100000000000100000000000101000001111010111110000000000011001000000110000000000001000100000010111001000011111111";
        ram[9] = "0b01000111100000110111100000100000001111101000001111100111011111111000000111100111110000010111101000100111010001000000110111110000010001000110110111101000010110111111101111100000011001001111110";
        ram[10] = "0b11101111110000001000001111100111100000010000000000000000100111111000100000101111110000001111111111101111101000000111111111010000001001000000010000001111011111001111001000110111110111110000111";
        ram[11] = "0b00100000100000101111111000001111110000011000100111101111001000000000010000010000101111011111000000100111111111111000001000000000000000011111111000011000110111010111001111110000011000001000001";
        ram[12] = "0b01001111000001001111011000001000110000011000110000001000010000100000001000111000110111001000010111111111011001001000111001000000001000101110101111101000001000010000100000010000010001000000000";
        ram[13] = "0b00101000000111110111111111010000001111010111111111110000100000100000101000101111001111011000000001000111100000001110101111110000101000100000001111111111111000010111110000110000000111110000111";
        ram[14] = "0b11111111111111011111111111100000101000011111111111101000010111011111111000011111011000100111110001001111110111111111100000100111110000001111101111111111011000010000011000100000001111010000010";
        ram[15] = "0b11011111100000011000001111101111101000000000101000111000001000000111110000110000011111011111110111000000000000101000000111110000000111111111000111110111110000101000111111010000110111100111100";
        ram[16] = "0b00100111111111111000101000100111100000100111101001000000101111111111101000101000001000100000010111011111101111110111000111100000010111111000001000110111010000111000101000000111100000010111100";
        ram[17] = "0b00011000110000011000000000000000100000110111100111111000000111001111110111110000001000111000001000101111010000100000010000001000010000010000011000110111011000001000110111011000110000100111011";
        ram[18] = "0b11011000000000011111011000101000100000111000000111110000100111011111100111001111101000010111111111101111111000100000100111111000110111011000010111001111110111001000011111010111100111100000011";
        ram[19] = "0b11111111110000001110111000011111011000001000001000000000101111110000110000000111010111101111011000100000110111010111100111101000001000001000100000110000000111101111110000100111111111101000100";
        ram[20] = "0b11001000010111111111000111110000101111001111111111011111111111010000010111110000110111011111010000000000000000011000000000000111111000100000011000011000101000010000100111100000101111110111011";
        ram[21] = "0b00111111110111110111010000000000010000010111011111110000000000100111011111100111110000000000001111110111100111101000000000111001010111101000010111001001000111000111011000011111110000110000001";
        ram[22] = "0b11101111110111010111001000010000011111001000000000101000101000111000010000010111111000010000010111100000100111111111100111100000110111011000001000010000011111111111110000010000001111101000110";
        ram[23] = "0b00010000100111101111100000000000110111000000011111011111001111011000000000010000010000001000001000011111111000000111111000111111101111110000110000101111100000110000100000001001000111111111001";
        ram[24] = "0b00010000001000000111101111101000010111010000010000001111111000011000001111011111111111100001000111111111011111100000110000010000010000000111100111011000101111011000100000001000010111111000011";
        ram[25] = "0b00001111100111010111110000010111100111000000001000110111101000101000110000011111010000110000011111101000000000000000011000000111010000001000110000010000011000010000000000011000000111111000001";
        ram[26] = "0b00010000101111110000001000001111100111110000101000000000001111010000100111110000100000010000110111100000010111101001000000101111001111010000010000000000001111110111110111100000110111101110111";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2d_cl_me_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_w2_V) {


static const unsigned DataWidth = 191;
static const unsigned AddressRange = 27;
static const unsigned AddressWidth = 5;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2d_cl_me_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_w2_V_ram* meminst;


SC_CTOR(conv_2d_cl_me_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_w2_V) {
meminst = new conv_2d_cl_me_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_w2_V_ram("conv_2d_cl_me_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_w2_V_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2d_cl_me_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_w2_V() {
    delete meminst;
}


};//endmodule
#endif

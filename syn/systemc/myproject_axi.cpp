// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "myproject_axi.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const int myproject_axi::C_S_AXI_DATA_WIDTH = "100000";
const int myproject_axi::C_S_AXI_WSTRB_WIDTH = "100";
const int myproject_axi::C_S_AXI_ADDR_WIDTH = "100000";
const sc_logic myproject_axi::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic myproject_axi::ap_const_logic_0 = sc_dt::Log_0;

myproject_axi::myproject_axi(sc_module_name name) : sc_module(name), mVcdFile(0) {
    myproject_axi_AXILiteS_s_axi_U = new myproject_axi_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("myproject_axi_AXILiteS_s_axi_U");
    myproject_axi_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    myproject_axi_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    myproject_axi_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    myproject_axi_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    myproject_axi_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    myproject_axi_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    myproject_axi_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    myproject_axi_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    myproject_axi_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    myproject_axi_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    myproject_axi_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    myproject_axi_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    myproject_axi_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    myproject_axi_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    myproject_axi_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    myproject_axi_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    myproject_axi_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    myproject_axi_AXILiteS_s_axi_U->ACLK(ap_clk);
    myproject_axi_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    myproject_axi_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    myproject_axi_AXILiteS_s_axi_U->in_V_address0(Loop_1_proc188_U0_in_V_address0);
    myproject_axi_AXILiteS_s_axi_U->in_V_ce0(Loop_1_proc188_U0_in_V_ce0);
    myproject_axi_AXILiteS_s_axi_U->in_V_q0(in_V_q0);
    myproject_axi_AXILiteS_s_axi_U->out_V_address0(Loop_2_proc189_U0_out_V_address0);
    myproject_axi_AXILiteS_s_axi_U->out_V_ce0(Loop_2_proc189_U0_out_V_ce0);
    myproject_axi_AXILiteS_s_axi_U->out_V_we0(Loop_2_proc189_U0_out_V_we0);
    myproject_axi_AXILiteS_s_axi_U->out_V_d0(Loop_2_proc189_U0_out_V_d0);
    Loop_1_proc188_U0 = new Loop_1_proc188("Loop_1_proc188_U0");
    Loop_1_proc188_U0->ap_clk(ap_clk);
    Loop_1_proc188_U0->ap_rst(ap_rst_n_inv);
    Loop_1_proc188_U0->ap_start(Loop_1_proc188_U0_ap_start);
    Loop_1_proc188_U0->start_full_n(start_for_myproject_U0_full_n);
    Loop_1_proc188_U0->ap_done(Loop_1_proc188_U0_ap_done);
    Loop_1_proc188_U0->ap_continue(Loop_1_proc188_U0_ap_continue);
    Loop_1_proc188_U0->ap_idle(Loop_1_proc188_U0_ap_idle);
    Loop_1_proc188_U0->ap_ready(Loop_1_proc188_U0_ap_ready);
    Loop_1_proc188_U0->start_out(Loop_1_proc188_U0_start_out);
    Loop_1_proc188_U0->start_write(Loop_1_proc188_U0_start_write);
    Loop_1_proc188_U0->in_V_address0(Loop_1_proc188_U0_in_V_address0);
    Loop_1_proc188_U0->in_V_ce0(Loop_1_proc188_U0_in_V_ce0);
    Loop_1_proc188_U0->in_V_q0(in_V_q0);
    Loop_1_proc188_U0->in_local_V_V_din(Loop_1_proc188_U0_in_local_V_V_din);
    Loop_1_proc188_U0->in_local_V_V_full_n(in_local_V_V_full_n);
    Loop_1_proc188_U0->in_local_V_V_write(Loop_1_proc188_U0_in_local_V_V_write);
    myproject_U0 = new myproject("myproject_U0");
    myproject_U0->ap_start(myproject_U0_ap_start);
    myproject_U0->start_full_n(start_for_Loop_2_proc189_U0_full_n);
    myproject_U0->start_out(myproject_U0_start_out);
    myproject_U0->start_write(myproject_U0_start_write);
    myproject_U0->conv2d_input_V_V_dout(in_local_V_V_dout);
    myproject_U0->conv2d_input_V_V_empty_n(in_local_V_V_empty_n);
    myproject_U0->conv2d_input_V_V_read(myproject_U0_conv2d_input_V_V_read);
    myproject_U0->layer19_out_V_V_din(myproject_U0_layer19_out_V_V_din);
    myproject_U0->layer19_out_V_V_full_n(out_local_V_V_full_n);
    myproject_U0->layer19_out_V_V_write(myproject_U0_layer19_out_V_V_write);
    myproject_U0->ap_clk(ap_clk);
    myproject_U0->ap_rst(ap_rst_n_inv);
    myproject_U0->ap_done(myproject_U0_ap_done);
    myproject_U0->ap_ready(myproject_U0_ap_ready);
    myproject_U0->ap_idle(myproject_U0_ap_idle);
    myproject_U0->ap_continue(myproject_U0_ap_continue);
    Loop_2_proc189_U0 = new Loop_2_proc189("Loop_2_proc189_U0");
    Loop_2_proc189_U0->ap_clk(ap_clk);
    Loop_2_proc189_U0->ap_rst(ap_rst_n_inv);
    Loop_2_proc189_U0->ap_start(Loop_2_proc189_U0_ap_start);
    Loop_2_proc189_U0->ap_done(Loop_2_proc189_U0_ap_done);
    Loop_2_proc189_U0->ap_continue(Loop_2_proc189_U0_ap_continue);
    Loop_2_proc189_U0->ap_idle(Loop_2_proc189_U0_ap_idle);
    Loop_2_proc189_U0->ap_ready(Loop_2_proc189_U0_ap_ready);
    Loop_2_proc189_U0->out_local_V_V_dout(out_local_V_V_dout);
    Loop_2_proc189_U0->out_local_V_V_empty_n(out_local_V_V_empty_n);
    Loop_2_proc189_U0->out_local_V_V_read(Loop_2_proc189_U0_out_local_V_V_read);
    Loop_2_proc189_U0->out_V_address0(Loop_2_proc189_U0_out_V_address0);
    Loop_2_proc189_U0->out_V_ce0(Loop_2_proc189_U0_out_V_ce0);
    Loop_2_proc189_U0->out_V_we0(Loop_2_proc189_U0_out_V_we0);
    Loop_2_proc189_U0->out_V_d0(Loop_2_proc189_U0_out_V_d0);
    in_local_V_V_U = new fifo_w16_d3072_A("in_local_V_V_U");
    in_local_V_V_U->clk(ap_clk);
    in_local_V_V_U->reset(ap_rst_n_inv);
    in_local_V_V_U->if_read_ce(ap_var_for_const0);
    in_local_V_V_U->if_write_ce(ap_var_for_const0);
    in_local_V_V_U->if_din(Loop_1_proc188_U0_in_local_V_V_din);
    in_local_V_V_U->if_full_n(in_local_V_V_full_n);
    in_local_V_V_U->if_write(Loop_1_proc188_U0_in_local_V_V_write);
    in_local_V_V_U->if_dout(in_local_V_V_dout);
    in_local_V_V_U->if_empty_n(in_local_V_V_empty_n);
    in_local_V_V_U->if_read(myproject_U0_conv2d_input_V_V_read);
    out_local_V_V_U = new fifo_w16_d5_A("out_local_V_V_U");
    out_local_V_V_U->clk(ap_clk);
    out_local_V_V_U->reset(ap_rst_n_inv);
    out_local_V_V_U->if_read_ce(ap_var_for_const0);
    out_local_V_V_U->if_write_ce(ap_var_for_const0);
    out_local_V_V_U->if_din(myproject_U0_layer19_out_V_V_din);
    out_local_V_V_U->if_full_n(out_local_V_V_full_n);
    out_local_V_V_U->if_write(myproject_U0_layer19_out_V_V_write);
    out_local_V_V_U->if_dout(out_local_V_V_dout);
    out_local_V_V_U->if_empty_n(out_local_V_V_empty_n);
    out_local_V_V_U->if_read(Loop_2_proc189_U0_out_local_V_V_read);
    start_for_myproject_U0_U = new start_for_myproject_U0("start_for_myproject_U0_U");
    start_for_myproject_U0_U->clk(ap_clk);
    start_for_myproject_U0_U->reset(ap_rst_n_inv);
    start_for_myproject_U0_U->if_read_ce(ap_var_for_const0);
    start_for_myproject_U0_U->if_write_ce(ap_var_for_const0);
    start_for_myproject_U0_U->if_din(start_for_myproject_U0_din);
    start_for_myproject_U0_U->if_full_n(start_for_myproject_U0_full_n);
    start_for_myproject_U0_U->if_write(Loop_1_proc188_U0_start_write);
    start_for_myproject_U0_U->if_dout(start_for_myproject_U0_dout);
    start_for_myproject_U0_U->if_empty_n(start_for_myproject_U0_empty_n);
    start_for_myproject_U0_U->if_read(myproject_U0_ap_ready);
    start_for_Loop_2_proc189_U0_U = new start_for_Loop_2_proc189_U0("start_for_Loop_2_proc189_U0_U");
    start_for_Loop_2_proc189_U0_U->clk(ap_clk);
    start_for_Loop_2_proc189_U0_U->reset(ap_rst_n_inv);
    start_for_Loop_2_proc189_U0_U->if_read_ce(ap_var_for_const0);
    start_for_Loop_2_proc189_U0_U->if_write_ce(ap_var_for_const0);
    start_for_Loop_2_proc189_U0_U->if_din(start_for_Loop_2_proc189_U0_din);
    start_for_Loop_2_proc189_U0_U->if_full_n(start_for_Loop_2_proc189_U0_full_n);
    start_for_Loop_2_proc189_U0_U->if_write(myproject_U0_start_write);
    start_for_Loop_2_proc189_U0_U->if_dout(start_for_Loop_2_proc189_U0_dout);
    start_for_Loop_2_proc189_U0_U->if_empty_n(start_for_Loop_2_proc189_U0_empty_n);
    start_for_Loop_2_proc189_U0_U->if_read(Loop_2_proc189_U0_ap_ready);

    SC_METHOD(thread_Loop_1_proc188_U0_ap_continue);

    SC_METHOD(thread_Loop_1_proc188_U0_ap_start);

    SC_METHOD(thread_Loop_2_proc189_U0_ap_continue);

    SC_METHOD(thread_Loop_2_proc189_U0_ap_start);
    sensitive << ( start_for_Loop_2_proc189_U0_empty_n );

    SC_METHOD(thread_Loop_2_proc189_U0_start_full_n);

    SC_METHOD(thread_Loop_2_proc189_U0_start_write);

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sync_continue);

    SC_METHOD(thread_myproject_U0_ap_continue);

    SC_METHOD(thread_myproject_U0_ap_start);
    sensitive << ( start_for_myproject_U0_empty_n );

    SC_METHOD(thread_start_for_Loop_2_proc189_U0_din);

    SC_METHOD(thread_start_for_myproject_U0_din);

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "myproject_axi_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, in_V_q0, "in_V_q0");
    sc_trace(mVcdFile, Loop_1_proc188_U0_ap_start, "Loop_1_proc188_U0_ap_start");
    sc_trace(mVcdFile, Loop_1_proc188_U0_ap_done, "Loop_1_proc188_U0_ap_done");
    sc_trace(mVcdFile, Loop_1_proc188_U0_ap_continue, "Loop_1_proc188_U0_ap_continue");
    sc_trace(mVcdFile, Loop_1_proc188_U0_ap_idle, "Loop_1_proc188_U0_ap_idle");
    sc_trace(mVcdFile, Loop_1_proc188_U0_ap_ready, "Loop_1_proc188_U0_ap_ready");
    sc_trace(mVcdFile, Loop_1_proc188_U0_start_out, "Loop_1_proc188_U0_start_out");
    sc_trace(mVcdFile, Loop_1_proc188_U0_start_write, "Loop_1_proc188_U0_start_write");
    sc_trace(mVcdFile, Loop_1_proc188_U0_in_V_address0, "Loop_1_proc188_U0_in_V_address0");
    sc_trace(mVcdFile, Loop_1_proc188_U0_in_V_ce0, "Loop_1_proc188_U0_in_V_ce0");
    sc_trace(mVcdFile, Loop_1_proc188_U0_in_local_V_V_din, "Loop_1_proc188_U0_in_local_V_V_din");
    sc_trace(mVcdFile, Loop_1_proc188_U0_in_local_V_V_write, "Loop_1_proc188_U0_in_local_V_V_write");
    sc_trace(mVcdFile, myproject_U0_ap_start, "myproject_U0_ap_start");
    sc_trace(mVcdFile, myproject_U0_start_out, "myproject_U0_start_out");
    sc_trace(mVcdFile, myproject_U0_start_write, "myproject_U0_start_write");
    sc_trace(mVcdFile, myproject_U0_conv2d_input_V_V_read, "myproject_U0_conv2d_input_V_V_read");
    sc_trace(mVcdFile, myproject_U0_layer19_out_V_V_din, "myproject_U0_layer19_out_V_V_din");
    sc_trace(mVcdFile, myproject_U0_layer19_out_V_V_write, "myproject_U0_layer19_out_V_V_write");
    sc_trace(mVcdFile, myproject_U0_ap_done, "myproject_U0_ap_done");
    sc_trace(mVcdFile, myproject_U0_ap_ready, "myproject_U0_ap_ready");
    sc_trace(mVcdFile, myproject_U0_ap_idle, "myproject_U0_ap_idle");
    sc_trace(mVcdFile, myproject_U0_ap_continue, "myproject_U0_ap_continue");
    sc_trace(mVcdFile, Loop_2_proc189_U0_ap_start, "Loop_2_proc189_U0_ap_start");
    sc_trace(mVcdFile, Loop_2_proc189_U0_ap_done, "Loop_2_proc189_U0_ap_done");
    sc_trace(mVcdFile, Loop_2_proc189_U0_ap_continue, "Loop_2_proc189_U0_ap_continue");
    sc_trace(mVcdFile, Loop_2_proc189_U0_ap_idle, "Loop_2_proc189_U0_ap_idle");
    sc_trace(mVcdFile, Loop_2_proc189_U0_ap_ready, "Loop_2_proc189_U0_ap_ready");
    sc_trace(mVcdFile, Loop_2_proc189_U0_out_local_V_V_read, "Loop_2_proc189_U0_out_local_V_V_read");
    sc_trace(mVcdFile, Loop_2_proc189_U0_out_V_address0, "Loop_2_proc189_U0_out_V_address0");
    sc_trace(mVcdFile, Loop_2_proc189_U0_out_V_ce0, "Loop_2_proc189_U0_out_V_ce0");
    sc_trace(mVcdFile, Loop_2_proc189_U0_out_V_we0, "Loop_2_proc189_U0_out_V_we0");
    sc_trace(mVcdFile, Loop_2_proc189_U0_out_V_d0, "Loop_2_proc189_U0_out_V_d0");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, in_local_V_V_full_n, "in_local_V_V_full_n");
    sc_trace(mVcdFile, in_local_V_V_dout, "in_local_V_V_dout");
    sc_trace(mVcdFile, in_local_V_V_empty_n, "in_local_V_V_empty_n");
    sc_trace(mVcdFile, out_local_V_V_full_n, "out_local_V_V_full_n");
    sc_trace(mVcdFile, out_local_V_V_dout, "out_local_V_V_dout");
    sc_trace(mVcdFile, out_local_V_V_empty_n, "out_local_V_V_empty_n");
    sc_trace(mVcdFile, start_for_myproject_U0_din, "start_for_myproject_U0_din");
    sc_trace(mVcdFile, start_for_myproject_U0_full_n, "start_for_myproject_U0_full_n");
    sc_trace(mVcdFile, start_for_myproject_U0_dout, "start_for_myproject_U0_dout");
    sc_trace(mVcdFile, start_for_myproject_U0_empty_n, "start_for_myproject_U0_empty_n");
    sc_trace(mVcdFile, start_for_Loop_2_proc189_U0_din, "start_for_Loop_2_proc189_U0_din");
    sc_trace(mVcdFile, start_for_Loop_2_proc189_U0_full_n, "start_for_Loop_2_proc189_U0_full_n");
    sc_trace(mVcdFile, start_for_Loop_2_proc189_U0_dout, "start_for_Loop_2_proc189_U0_dout");
    sc_trace(mVcdFile, start_for_Loop_2_proc189_U0_empty_n, "start_for_Loop_2_proc189_U0_empty_n");
    sc_trace(mVcdFile, Loop_2_proc189_U0_start_full_n, "Loop_2_proc189_U0_start_full_n");
    sc_trace(mVcdFile, Loop_2_proc189_U0_start_write, "Loop_2_proc189_U0_start_write");
#endif

    }
    mHdltvinHandle.open("myproject_axi.hdltvin.dat");
    mHdltvoutHandle.open("myproject_axi.hdltvout.dat");
}

myproject_axi::~myproject_axi() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete myproject_axi_AXILiteS_s_axi_U;
    delete Loop_1_proc188_U0;
    delete myproject_U0;
    delete Loop_2_proc189_U0;
    delete in_local_V_V_U;
    delete out_local_V_V_U;
    delete start_for_myproject_U0_U;
    delete start_for_Loop_2_proc189_U0_U;
}

void myproject_axi::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void myproject_axi::thread_Loop_1_proc188_U0_ap_continue() {
    Loop_1_proc188_U0_ap_continue = ap_const_logic_1;
}

void myproject_axi::thread_Loop_1_proc188_U0_ap_start() {
    Loop_1_proc188_U0_ap_start = ap_const_logic_1;
}

void myproject_axi::thread_Loop_2_proc189_U0_ap_continue() {
    Loop_2_proc189_U0_ap_continue = ap_const_logic_1;
}

void myproject_axi::thread_Loop_2_proc189_U0_ap_start() {
    Loop_2_proc189_U0_ap_start = start_for_Loop_2_proc189_U0_empty_n.read();
}

void myproject_axi::thread_Loop_2_proc189_U0_start_full_n() {
    Loop_2_proc189_U0_start_full_n = ap_const_logic_1;
}

void myproject_axi::thread_Loop_2_proc189_U0_start_write() {
    Loop_2_proc189_U0_start_write = ap_const_logic_0;
}

void myproject_axi::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void myproject_axi::thread_ap_sync_continue() {
    ap_sync_continue = ap_const_logic_0;
}

void myproject_axi::thread_myproject_U0_ap_continue() {
    myproject_U0_ap_continue = ap_const_logic_1;
}

void myproject_axi::thread_myproject_U0_ap_start() {
    myproject_U0_ap_start = start_for_myproject_U0_empty_n.read();
}

void myproject_axi::thread_start_for_Loop_2_proc189_U0_din() {
    start_for_Loop_2_proc189_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void myproject_axi::thread_start_for_myproject_U0_din() {
    start_for_myproject_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void myproject_axi::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}


// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pooling2d_large_cl_nopad_pad_me_HH_
#define _pooling2d_large_cl_nopad_pad_me_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config15_s.h"
#include "pooling2d_large_cl_nopad_pad_me_layer_in_V_6.h"
#include "cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config8_s_tmpinPgM.h"
#include "pooling2d_large_cl_nopad_pad_me_ap_fixed_ap_fixed_config8Shg.h"

namespace ap_rtl {

struct pooling2d_large_cl_nopad_pad_me : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<16> > data_V_V_dout;
    sc_in< sc_logic > data_V_V_empty_n;
    sc_out< sc_logic > data_V_V_read;
    sc_out< sc_lv<16> > res_V_V_din;
    sc_in< sc_logic > res_V_V_full_n;
    sc_out< sc_logic > res_V_V_write;


    // Module declarations
    pooling2d_large_cl_nopad_pad_me(sc_module_name name);
    SC_HAS_PROCESS(pooling2d_large_cl_nopad_pad_me);

    ~pooling2d_large_cl_nopad_pad_me();

    sc_trace_file* mVcdFile;

    pooling2d_large_cl_nopad_pad_me_layer_in_V_6* layer_in_V_6_U;
    cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config8_s_tmpinPgM* tmpdata_V_U;
    pooling2d_large_cl_nopad_pad_me_ap_fixed_ap_fixed_config8Shg* pool_V_U;
    cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config15_s* grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config15_s_fu_352;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<17> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_lv<8> > layer_in_V_6_address0;
    sc_signal< sc_logic > layer_in_V_6_ce0;
    sc_signal< sc_logic > layer_in_V_6_we0;
    sc_signal< sc_lv<16> > layer_in_V_6_q0;
    sc_signal< sc_lv<32> > sX_1;
    sc_signal< sc_lv<32> > sY_1;
    sc_signal< sc_lv<32> > pY_1;
    sc_signal< sc_lv<32> > pX_1;
    sc_signal< sc_logic > data_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln489_fu_499_p2;
    sc_signal< sc_logic > res_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<1> > icmp_ln512_fu_702_p2;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<8> > i_ih_fu_493_p2;
    sc_signal< sc_lv<8> > i_ih_reg_750;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<7> > i0_fu_505_p2;
    sc_signal< sc_lv<7> > i0_reg_758;
    sc_signal< bool > ap_block_state3;
    sc_signal< sc_lv<16> > tmp_V_12_reg_763;
    sc_signal< sc_lv<32> > sX_1_load_reg_768;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config15_s_fu_352_ap_ready;
    sc_signal< sc_logic > grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config15_s_fu_352_ap_done;
    sc_signal< sc_lv<1> > icmp_ln498_fu_520_p2;
    sc_signal< sc_lv<1> > icmp_ln498_reg_773;
    sc_signal< sc_lv<32> > sY_1_load_reg_778;
    sc_signal< sc_lv<1> > icmp_ln498_4_fu_530_p2;
    sc_signal< sc_lv<1> > icmp_ln498_4_reg_783;
    sc_signal< sc_lv<32> > pY_1_load_reg_788;
    sc_signal< sc_lv<32> > pX_1_load_reg_794;
    sc_signal< sc_lv<1> > and_ln498_4_fu_568_p2;
    sc_signal< sc_lv<1> > and_ln498_4_reg_800;
    sc_signal< sc_lv<8> > zext_ln500_fu_574_p1;
    sc_signal< sc_lv<8> > zext_ln500_reg_804;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<7> > i1_fu_584_p2;
    sc_signal< sc_lv<7> > i1_reg_812;
    sc_signal< sc_lv<1> > icmp_ln522_fu_590_p2;
    sc_signal< sc_lv<1> > icmp_ln522_reg_817;
    sc_signal< sc_lv<1> > icmp_ln500_fu_578_p2;
    sc_signal< sc_lv<32> > select_ln537_fu_611_p3;
    sc_signal< sc_lv<32> > select_ln537_reg_821;
    sc_signal< sc_lv<32> > select_ln532_fu_651_p3;
    sc_signal< sc_lv<32> > select_ln532_reg_829;
    sc_signal< sc_lv<1> > icmp_ln526_fu_630_p2;
    sc_signal< sc_lv<3> > i2_fu_670_p2;
    sc_signal< sc_lv<3> > i2_reg_837;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<8> > add_ln508_fu_688_p2;
    sc_signal< sc_lv<8> > add_ln508_reg_842;
    sc_signal< sc_lv<1> > icmp_ln506_fu_664_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<16> > layer_in_V_6_load_reg_852;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<16> > pool_V_q0;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< bool > ap_block_state12;
    sc_signal< sc_lv<3> > i_fu_713_p2;
    sc_signal< sc_lv<3> > i_reg_870;
    sc_signal< sc_lv<16> > pool_V_load_reg_875;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<16> > pool_res_V_2_fu_724_p3;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<6> > tmpdata_V_address0;
    sc_signal< sc_logic > tmpdata_V_ce0;
    sc_signal< sc_logic > tmpdata_V_we0;
    sc_signal< sc_lv<16> > tmpdata_V_q0;
    sc_signal< sc_lv<2> > pool_V_address0;
    sc_signal< sc_logic > pool_V_ce0;
    sc_signal< sc_logic > pool_V_we0;
    sc_signal< sc_logic > grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config15_s_fu_352_ap_start;
    sc_signal< sc_logic > grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config15_s_fu_352_ap_idle;
    sc_signal< sc_lv<6> > grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config15_s_fu_352_data_V_address0;
    sc_signal< sc_logic > grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config15_s_fu_352_data_V_ce0;
    sc_signal< sc_lv<8> > grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config15_s_fu_352_output_V_address0;
    sc_signal< sc_logic > grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config15_s_fu_352_output_V_ce0;
    sc_signal< sc_logic > grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config15_s_fu_352_output_V_we0;
    sc_signal< sc_lv<16> > grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config15_s_fu_352_output_V_d0;
    sc_signal< sc_lv<8> > i_ih_0_reg_273;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<7> > i0_0_reg_284;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln484_fu_487_p2;
    sc_signal< sc_lv<7> > i1_0_reg_296;
    sc_signal< sc_lv<3> > i2_0_reg_307;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<16> > tmp_V_reg_319;
    sc_signal< sc_lv<3> > i_0_reg_330;
    sc_signal< sc_lv<32> > storemerge_reg_341;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_logic > grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config15_s_fu_352_ap_start_reg;
    sc_signal< bool > ap_block_state3_ignore_call0;
    sc_signal< sc_lv<64> > zext_ln492_fu_511_p1;
    sc_signal< sc_lv<64> > zext_ln508_2_fu_693_p1;
    sc_signal< sc_lv<64> > zext_ln508_fu_697_p1;
    sc_signal< sc_lv<64> > zext_ln513_fu_708_p1;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<32> > add_ln530_fu_635_p2;
    sc_signal< sc_lv<32> > add_ln535_fu_595_p2;
    sc_signal< sc_lv<1> > icmp_ln498_5_fu_540_p2;
    sc_signal< sc_lv<1> > icmp_ln498_6_fu_550_p2;
    sc_signal< sc_lv<1> > and_ln498_3_fu_562_p2;
    sc_signal< sc_lv<1> > and_ln498_fu_556_p2;
    sc_signal< sc_lv<32> > add_ln537_fu_606_p2;
    sc_signal< sc_lv<32> > add_ln532_fu_646_p2;
    sc_signal< sc_lv<2> > trunc_ln508_fu_676_p1;
    sc_signal< sc_lv<8> > shl_ln_fu_680_p3;
    sc_signal< sc_lv<1> > icmp_ln1494_fu_719_p2;
    sc_signal< sc_lv<17> > ap_NS_fsm;
    sc_signal< bool > ap_condition_166;
    sc_signal< bool > ap_condition_1099;
    sc_signal< bool > ap_condition_177;
    sc_signal< bool > ap_condition_316;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<17> ap_ST_fsm_state1;
    static const sc_lv<17> ap_ST_fsm_state2;
    static const sc_lv<17> ap_ST_fsm_state3;
    static const sc_lv<17> ap_ST_fsm_state4;
    static const sc_lv<17> ap_ST_fsm_state5;
    static const sc_lv<17> ap_ST_fsm_state6;
    static const sc_lv<17> ap_ST_fsm_state7;
    static const sc_lv<17> ap_ST_fsm_state8;
    static const sc_lv<17> ap_ST_fsm_state9;
    static const sc_lv<17> ap_ST_fsm_state10;
    static const sc_lv<17> ap_ST_fsm_state11;
    static const sc_lv<17> ap_ST_fsm_state12;
    static const sc_lv<17> ap_ST_fsm_state13;
    static const sc_lv<17> ap_ST_fsm_state14;
    static const sc_lv<17> ap_ST_fsm_state15;
    static const sc_lv<17> ap_ST_fsm_state16;
    static const sc_lv<17> ap_ST_fsm_state17;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<8> ap_const_lv8_A9;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<6> ap_const_lv6_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln508_fu_688_p2();
    void thread_add_ln530_fu_635_p2();
    void thread_add_ln532_fu_646_p2();
    void thread_add_ln535_fu_595_p2();
    void thread_add_ln537_fu_606_p2();
    void thread_and_ln498_3_fu_562_p2();
    void thread_and_ln498_4_fu_568_p2();
    void thread_and_ln498_fu_556_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state1();
    void thread_ap_block_state12();
    void thread_ap_block_state3();
    void thread_ap_block_state3_ignore_call0();
    void thread_ap_condition_1099();
    void thread_ap_condition_166();
    void thread_ap_condition_177();
    void thread_ap_condition_316();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_data_V_V_blk_n();
    void thread_data_V_V_read();
    void thread_grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config15_s_fu_352_ap_start();
    void thread_i0_fu_505_p2();
    void thread_i1_fu_584_p2();
    void thread_i2_fu_670_p2();
    void thread_i_fu_713_p2();
    void thread_i_ih_fu_493_p2();
    void thread_icmp_ln1494_fu_719_p2();
    void thread_icmp_ln484_fu_487_p2();
    void thread_icmp_ln489_fu_499_p2();
    void thread_icmp_ln498_4_fu_530_p2();
    void thread_icmp_ln498_5_fu_540_p2();
    void thread_icmp_ln498_6_fu_550_p2();
    void thread_icmp_ln498_fu_520_p2();
    void thread_icmp_ln500_fu_578_p2();
    void thread_icmp_ln506_fu_664_p2();
    void thread_icmp_ln512_fu_702_p2();
    void thread_icmp_ln522_fu_590_p2();
    void thread_icmp_ln526_fu_630_p2();
    void thread_internal_ap_ready();
    void thread_layer_in_V_6_address0();
    void thread_layer_in_V_6_ce0();
    void thread_layer_in_V_6_we0();
    void thread_pool_V_address0();
    void thread_pool_V_ce0();
    void thread_pool_V_we0();
    void thread_pool_res_V_2_fu_724_p3();
    void thread_real_start();
    void thread_res_V_V_blk_n();
    void thread_res_V_V_din();
    void thread_res_V_V_write();
    void thread_select_ln532_fu_651_p3();
    void thread_select_ln537_fu_611_p3();
    void thread_shl_ln_fu_680_p3();
    void thread_start_out();
    void thread_start_write();
    void thread_tmpdata_V_address0();
    void thread_tmpdata_V_ce0();
    void thread_tmpdata_V_we0();
    void thread_trunc_ln508_fu_676_p1();
    void thread_zext_ln492_fu_511_p1();
    void thread_zext_ln500_fu_574_p1();
    void thread_zext_ln508_2_fu_693_p1();
    void thread_zext_ln508_fu_697_p1();
    void thread_zext_ln513_fu_708_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif

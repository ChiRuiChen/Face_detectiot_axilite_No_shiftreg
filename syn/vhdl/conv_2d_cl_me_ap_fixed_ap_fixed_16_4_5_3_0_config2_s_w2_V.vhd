-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
-- Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity conv_2d_cl_me_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_w2_V_rom is 
    generic(
             DWIDTH     : integer := 191; 
             AWIDTH     : integer := 5; 
             MEM_SIZE    : integer := 27
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of conv_2d_cl_me_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_w2_V_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "11101000000111111000011000100111101111011000101111011111110111101111101111111000001000110000011111110000010111100000010111111111011111011111111111011111110000001000000000000111100000110000000", 
    1 => "00001000100111100000110000001000000000001111011000011000101000000000010000001111101111101111111000000000100111011000010111111111110000000000000000100000000000011111001000111111101111111000010", 
    2 => "00010000110000001000101000000000000000100000011111100111110000000111110111010111110000100111101000010111100111100111101111111000010111011111011111101000000111111111010111100000010111101000101", 
    3 => "10110111010000111000100111010000101000011000110111011111101000011111010000011000110000001000011000001001001111011000000000011111010110111111001111100000110111110111101111010111111111100111110", 
    4 => "11010000000000001001000111010000011111101000000000100000010000100000111000000111011111111111110000011000111000101111000111011111001111100111100000011111011000101111011000111111011111101000010", 
    5 => "11010000101111101000010111001000000000110111101111110111110000000111101111001111011000010111011000111000001000000111111111100111110111110111010111110111010000000000101000010111001111111000110", 
    6 => "11100110111000111000101000011000010000000000001000010111010000001111010000001001011000000000110111101001010111110111110000010000010000010111100111111000100000101111111111011000010000011111000", 
    7 => "00011000011111100000111000101111100000011111100000101000101000011000010000100000001111111000000111110111110000000111010111101111111000110001000000101000001000011000101000000111011111111111110", 
    8 => "00001000111111011000011000110000001001001111001000011111101111001000000111000000100000000000100000000000101000001111010111110000000000011001000000110000000000001000100000010111001000011111111", 
    9 => "01000111100000110111100000100000001111101000001111100111011111111000000111100111110000010111101000100111010001000000110111110000010001000110110111101000010110111111101111100000011001001111110", 
    10 => "11101111110000001000001111100111100000010000000000000000100111111000100000101111110000001111111111101111101000000111111111010000001001000000010000001111011111001111001000110111110111110000111", 
    11 => "00100000100000101111111000001111110000011000100111101111001000000000010000010000101111011111000000100111111111111000001000000000000000011111111000011000110111010111001111110000011000001000001", 
    12 => "01001111000001001111011000001000110000011000110000001000010000100000001000111000110111001000010111111111011001001000111001000000001000101110101111101000001000010000100000010000010001000000000", 
    13 => "00101000000111110111111111010000001111010111111111110000100000100000101000101111001111011000000001000111100000001110101111110000101000100000001111111111111000010111110000110000000111110000111", 
    14 => "11111111111111011111111111100000101000011111111111101000010111011111111000011111011000100111110001001111110111111111100000100111110000001111101111111111011000010000011000100000001111010000010", 
    15 => "11011111100000011000001111101111101000000000101000111000001000000111110000110000011111011111110111000000000000101000000111110000000111111111000111110111110000101000111111010000110111100111100", 
    16 => "00100111111111111000101000100111100000100111101001000000101111111111101000101000001000100000010111011111101111110111000111100000010111111000001000110111010000111000101000000111100000010111100", 
    17 => "00011000110000011000000000000000100000110111100111111000000111001111110111110000001000111000001000101111010000100000010000001000010000010000011000110111011000001000110111011000110000100111011", 
    18 => "11011000000000011111011000101000100000111000000111110000100111011111100111001111101000010111111111101111111000100000100111111000110111011000010111001111110111001000011111010111100111100000011", 
    19 => "11111111110000001110111000011111011000001000001000000000101111110000110000000111010111101111011000100000110111010111100111101000001000001000100000110000000111101111110000100111111111101000100", 
    20 => "11001000010111111111000111110000101111001111111111011111111111010000010111110000110111011111010000000000000000011000000000000111111000100000011000011000101000010000100111100000101111110111011", 
    21 => "00111111110111110111010000000000010000010111011111110000000000100111011111100111110000000000001111110111100111101000000000111001010111101000010111001001000111000111011000011111110000110000001", 
    22 => "11101111110111010111001000010000011111001000000000101000101000111000010000010111111000010000010111100000100111111111100111100000110111011000001000010000011111111111110000010000001111101000110", 
    23 => "00010000100111101111100000000000110111000000011111011111001111011000000000010000010000001000001000011111111000000111111000111111101111110000110000101111100000110000100000001001000111111111001", 
    24 => "00010000001000000111101111101000010111010000010000001111111000011000001111011111111111100001000111111111011111100000110000010000010000000111100111011000101111011000100000001000010111111000011", 
    25 => "00001111100111010111110000010111100111000000001000110111101000101000110000011111010000110000011111101000000000000000011000000111010000001000110000010000011000010000000000011000000111111000001", 
    26 => "00010000101111110000001000001111100111110000101000000000001111010000100111110000100000010000110111100000010111101001000000101111001111010000010000000000001111110111110111100000110111101110111" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity conv_2d_cl_me_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_w2_V is
    generic (
        DataWidth : INTEGER := 191;
        AddressRange : INTEGER := 27;
        AddressWidth : INTEGER := 5);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of conv_2d_cl_me_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_w2_V is
    component conv_2d_cl_me_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_w2_V_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    conv_2d_cl_me_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_w2_V_rom_U :  component conv_2d_cl_me_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_w2_V_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;



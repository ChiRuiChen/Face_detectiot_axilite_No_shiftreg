// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cnnshift_arr_buffer_ap_fixed_ap_fixed_config12_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_V_address0,
        data_V_ce0,
        data_V_q0,
        output_V_address0,
        output_V_ce0,
        output_V_we0,
        output_V_d0,
        output_V_q0
);

parameter    ap_ST_fsm_state1 = 24'd1;
parameter    ap_ST_fsm_state2 = 24'd2;
parameter    ap_ST_fsm_state3 = 24'd4;
parameter    ap_ST_fsm_state4 = 24'd8;
parameter    ap_ST_fsm_state5 = 24'd16;
parameter    ap_ST_fsm_state6 = 24'd32;
parameter    ap_ST_fsm_state7 = 24'd64;
parameter    ap_ST_fsm_state8 = 24'd128;
parameter    ap_ST_fsm_state9 = 24'd256;
parameter    ap_ST_fsm_state10 = 24'd512;
parameter    ap_ST_fsm_state11 = 24'd1024;
parameter    ap_ST_fsm_state12 = 24'd2048;
parameter    ap_ST_fsm_state13 = 24'd4096;
parameter    ap_ST_fsm_state14 = 24'd8192;
parameter    ap_ST_fsm_state15 = 24'd16384;
parameter    ap_ST_fsm_state16 = 24'd32768;
parameter    ap_ST_fsm_state17 = 24'd65536;
parameter    ap_ST_fsm_state18 = 24'd131072;
parameter    ap_ST_fsm_state19 = 24'd262144;
parameter    ap_ST_fsm_state20 = 24'd524288;
parameter    ap_ST_fsm_state21 = 24'd1048576;
parameter    ap_ST_fsm_state22 = 24'd2097152;
parameter    ap_ST_fsm_state23 = 24'd4194304;
parameter    ap_ST_fsm_state24 = 24'd8388608;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] data_V_address0;
output   data_V_ce0;
input  [15:0] data_V_q0;
output  [9:0] output_V_address0;
output   output_V_ce0;
output   output_V_we0;
output  [15:0] output_V_d0;
input  [15:0] output_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_V_ce0;
reg[9:0] output_V_address0;
reg output_V_ce0;
reg output_V_we0;
reg[15:0] output_V_d0;

(* fsm_encoding = "none" *) reg   [23:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [10:0] linebuffer_V_address0;
reg    linebuffer_V_ce0;
reg    linebuffer_V_we0;
reg   [15:0] linebuffer_V_d0;
wire   [15:0] linebuffer_V_q0;
wire   [15:0] tmpinput_V_q0;
reg   [15:0] reg_275;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state23;
wire   [6:0] i0_fu_287_p2;
reg   [6:0] i0_reg_735;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln177_fu_281_p2;
reg   [15:0] data_V_load_reg_745;
wire    ap_CS_fsm_state3;
wire   [11:0] zext_ln203_fu_298_p1;
reg   [11:0] zext_ln203_reg_750;
wire    ap_CS_fsm_state4;
wire   [8:0] zext_ln203_41_fu_302_p1;
reg   [8:0] zext_ln203_41_reg_757;
wire   [8:0] add_ln182_fu_339_p2;
reg   [8:0] add_ln182_reg_767;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln180_fu_315_p2;
wire   [1:0] add_ln187_fu_344_p2;
reg   [1:0] add_ln187_reg_772;
wire   [8:0] add_ln187_4_fu_362_p2;
reg   [8:0] add_ln187_4_reg_778;
wire    ap_CS_fsm_state6;
wire   [5:0] zext_ln187_fu_375_p1;
reg   [5:0] zext_ln187_reg_793;
reg   [10:0] linebuffer_V_addr_1_reg_799;
reg   [15:0] tmp_V_reg_804;
wire   [3:0] i2_fu_403_p2;
reg   [3:0] i2_reg_812;
wire    ap_CS_fsm_state8;
wire   [5:0] add_ln203_23_fu_421_p2;
reg   [5:0] add_ln203_23_reg_817;
wire   [0:0] icmp_ln189_fu_397_p2;
wire   [5:0] add_ln203_25_fu_438_p2;
reg   [5:0] add_ln203_25_reg_822;
wire   [8:0] add_ln203_22_fu_461_p2;
reg   [8:0] add_ln203_22_reg_827;
wire   [1:0] i1_fu_466_p2;
reg   [1:0] i1_reg_832;
wire   [11:0] add_ln203_24_fu_479_p2;
reg   [11:0] add_ln203_24_reg_837;
wire    ap_CS_fsm_state9;
wire   [11:0] add_ln203_26_fu_491_p2;
reg   [11:0] add_ln203_26_reg_842;
wire    ap_CS_fsm_state10;
reg   [15:0] linebuffer_V_load_reg_852;
wire    ap_CS_fsm_state11;
wire   [1:0] i0_4_fu_514_p2;
reg   [1:0] i0_4_reg_860;
wire    ap_CS_fsm_state14;
wire   [7:0] zext_ln126_15_fu_532_p1;
reg   [7:0] zext_ln126_15_reg_865;
wire   [0:0] icmp_ln122_fu_508_p2;
wire   [7:0] add_ln126_fu_536_p2;
reg   [7:0] add_ln126_reg_870;
wire   [1:0] i1_8_fu_548_p2;
reg   [1:0] i1_8_reg_878;
wire    ap_CS_fsm_state15;
wire   [10:0] sub_ln126_fu_578_p2;
reg   [10:0] sub_ln126_reg_883;
wire   [0:0] icmp_ln124_fu_542_p2;
wire   [6:0] i2_8_fu_594_p2;
reg   [6:0] i2_8_reg_892;
wire    ap_CS_fsm_state16;
wire   [10:0] add_ln126_13_fu_609_p2;
reg   [10:0] add_ln126_13_reg_897;
wire   [0:0] icmp_ln125_fu_588_p2;
wire   [10:0] add_ln126_16_fu_623_p2;
reg   [10:0] add_ln126_16_reg_902;
wire    ap_CS_fsm_state17;
reg   [15:0] output_V_load_reg_912;
wire    ap_CS_fsm_state18;
wire   [1:0] i1_7_fu_650_p2;
reg   [1:0] i1_7_reg_920;
wire    ap_CS_fsm_state20;
wire   [9:0] sub_ln134_fu_676_p2;
reg   [9:0] sub_ln134_reg_925;
wire   [0:0] icmp_ln131_fu_644_p2;
wire   [8:0] zext_ln133_fu_682_p1;
reg   [8:0] zext_ln133_reg_930;
wire   [6:0] i2_7_fu_692_p2;
reg   [6:0] i2_7_reg_938;
wire    ap_CS_fsm_state21;
wire   [9:0] add_ln134_fu_710_p2;
reg   [9:0] add_ln134_reg_943;
wire   [0:0] icmp_ln133_fu_686_p2;
wire   [8:0] add_ln203_27_fu_719_p2;
reg   [8:0] add_ln203_27_reg_948;
wire    ap_CS_fsm_state22;
reg   [7:0] tmpinput_V_address0;
reg    tmpinput_V_ce0;
reg    tmpinput_V_we0;
reg   [15:0] tmpinput_V_d0;
reg   [6:0] i0_0_reg_185;
reg   [1:0] i1_0_reg_197;
wire    ap_CS_fsm_state13;
reg   [3:0] i2_0_reg_209;
wire    ap_CS_fsm_state12;
reg   [1:0] i0_0_i_reg_220;
reg   [1:0] i1_0_i_reg_231;
reg   [6:0] i2_0_i_reg_242;
wire    ap_CS_fsm_state19;
reg   [1:0] i11_0_i_reg_253;
reg   [6:0] i22_0_i_reg_264;
wire    ap_CS_fsm_state24;
wire   [63:0] zext_ln179_fu_293_p1;
wire   [63:0] tmp_fu_306_p3;
wire   [63:0] zext_ln182_4_fu_367_p1;
wire   [63:0] zext_ln187_9_fu_371_p1;
wire   [63:0] zext_ln203_42_fu_392_p1;
wire   [63:0] zext_ln203_48_fu_496_p1;
wire   [63:0] zext_ln203_46_fu_500_p1;
wire   [63:0] zext_ln203_44_fu_504_p1;
wire   [63:0] zext_ln126_4_fu_631_p1;
wire   [63:0] zext_ln126_fu_639_p1;
wire   [63:0] zext_ln203_50_fu_724_p1;
wire   [63:0] zext_ln134_fu_728_p1;
wire   [1:0] xor_ln182_fu_321_p2;
wire   [7:0] tmp_33_fu_327_p3;
wire   [8:0] zext_ln182_fu_335_p1;
wire   [7:0] tmp_34_fu_350_p3;
wire   [8:0] zext_ln187_8_fu_358_p1;
wire   [11:0] tmp_35_cast_fu_378_p4;
wire   [11:0] add_ln203_fu_387_p2;
wire   [4:0] tmp_38_fu_409_p3;
wire   [5:0] zext_ln203_45_fu_417_p1;
wire   [4:0] tmp_41_fu_426_p3;
wire   [5:0] zext_ln203_47_fu_434_p1;
wire   [1:0] sub_ln195_fu_443_p2;
wire   [7:0] tmp_37_fu_449_p3;
wire   [8:0] zext_ln203_43_fu_457_p1;
wire   [11:0] tmp_40_cast_fu_472_p3;
wire   [11:0] tmp_43_cast_fu_484_p3;
wire   [0:0] trunc_ln126_fu_520_p1;
wire   [6:0] shl_ln_fu_524_p3;
wire   [9:0] shl_ln126_5_fu_554_p3;
wire   [7:0] shl_ln126_6_fu_566_p3;
wire   [10:0] zext_ln126_16_fu_562_p1;
wire   [10:0] zext_ln126_17_fu_574_p1;
wire   [7:0] zext_ln125_fu_584_p1;
wire   [7:0] add_ln126_14_fu_600_p2;
wire   [10:0] zext_ln126_18_fu_605_p1;
wire   [7:0] add_ln126_15_fu_614_p2;
wire   [10:0] zext_ln126_19_fu_619_p1;
wire  signed [31:0] sext_ln126_4_fu_628_p1;
wire  signed [31:0] sext_ln126_fu_636_p1;
wire   [7:0] shl_ln134_3_fu_664_p3;
wire   [9:0] shl_ln3_fu_656_p3;
wire   [9:0] zext_ln134_6_fu_672_p1;
wire   [7:0] or_ln_fu_698_p3;
wire   [9:0] zext_ln134_7_fu_706_p1;
wire   [8:0] zext_ln203_49_fu_715_p1;
reg   [23:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 24'd1;
end

cnnshift_arr_buffer_ap_fixed_ap_fixed_config12_s_linebuffXh4 #(
    .DataWidth( 16 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuffer_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuffer_V_address0),
    .ce0(linebuffer_V_ce0),
    .we0(linebuffer_V_we0),
    .d0(linebuffer_V_d0),
    .q0(linebuffer_V_q0)
);

cnnshift_arr_buffer_ap_fixed_ap_fixed_config12_s_tmpinput_V #(
    .DataWidth( 16 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
tmpinput_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmpinput_V_address0),
    .ce0(tmpinput_V_ce0),
    .we0(tmpinput_V_we0),
    .d0(tmpinput_V_d0),
    .q0(tmpinput_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln177_fu_281_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i0_0_i_reg_220 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln124_fu_542_p2 == 1'd1))) begin
        i0_0_i_reg_220 <= i0_4_reg_860;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln180_fu_315_p2 == 1'd1))) begin
        i0_0_reg_185 <= i0_reg_735;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i0_0_reg_185 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln122_fu_508_p2 == 1'd1))) begin
        i11_0_i_reg_253 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln133_fu_686_p2 == 1'd1))) begin
        i11_0_i_reg_253 <= i1_7_reg_920;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln125_fu_588_p2 == 1'd1))) begin
        i1_0_i_reg_231 <= i1_8_reg_878;
    end else if (((icmp_ln122_fu_508_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        i1_0_i_reg_231 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i1_0_reg_197 <= i1_reg_832;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        i1_0_reg_197 <= 2'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln131_fu_644_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        i22_0_i_reg_264 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        i22_0_i_reg_264 <= i2_7_reg_938;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln124_fu_542_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        i2_0_i_reg_242 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        i2_0_i_reg_242 <= i2_8_reg_892;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i2_0_reg_209 <= i2_reg_812;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        i2_0_reg_209 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_fu_588_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        add_ln126_13_reg_897 <= add_ln126_13_fu_609_p2;
        add_ln126_16_reg_902 <= add_ln126_16_fu_623_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln122_fu_508_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        add_ln126_reg_870[7 : 6] <= add_ln126_fu_536_p2[7 : 6];
        zext_ln126_15_reg_865[6] <= zext_ln126_15_fu_532_p1[6];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln133_fu_686_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        add_ln134_reg_943 <= add_ln134_fu_710_p2;
        add_ln203_27_reg_948 <= add_ln203_27_fu_719_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln180_fu_315_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        add_ln182_reg_767 <= add_ln182_fu_339_p2;
        add_ln187_4_reg_778 <= add_ln187_4_fu_362_p2;
        add_ln187_reg_772 <= add_ln187_fu_344_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln189_fu_397_p2 == 1'd1))) begin
        add_ln203_22_reg_827 <= add_ln203_22_fu_461_p2;
        i1_reg_832 <= i1_fu_466_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln189_fu_397_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        add_ln203_23_reg_817 <= add_ln203_23_fu_421_p2;
        add_ln203_25_reg_822 <= add_ln203_25_fu_438_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln203_24_reg_837 <= add_ln203_24_fu_479_p2;
        add_ln203_26_reg_842 <= add_ln203_26_fu_491_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        data_V_load_reg_745 <= data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        i0_4_reg_860 <= i0_4_fu_514_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i0_reg_735 <= i0_fu_287_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        i1_7_reg_920 <= i1_7_fu_650_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        i1_8_reg_878 <= i1_8_fu_548_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        i2_7_reg_938 <= i2_7_fu_692_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        i2_8_reg_892 <= i2_8_fu_594_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i2_reg_812 <= i2_fu_403_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        linebuffer_V_addr_1_reg_799 <= zext_ln203_42_fu_392_p1;
        tmp_V_reg_804 <= linebuffer_V_q0;
        zext_ln187_reg_793[1 : 0] <= zext_ln187_fu_375_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        linebuffer_V_load_reg_852 <= linebuffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        output_V_load_reg_912 <= output_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_275 <= tmpinput_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln124_fu_542_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        sub_ln126_reg_883[10 : 6] <= sub_ln126_fu_578_p2[10 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln131_fu_644_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        sub_ln134_reg_925[9 : 6] <= sub_ln134_fu_676_p2[9 : 6];
        zext_ln133_reg_930[7 : 6] <= zext_ln133_fu_682_p1[7 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        zext_ln203_41_reg_757[6 : 0] <= zext_ln203_41_fu_302_p1[6 : 0];
        zext_ln203_reg_750[6 : 0] <= zext_ln203_fu_298_p1[6 : 0];
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state20) & (icmp_ln131_fu_644_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln131_fu_644_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_V_ce0 = 1'b1;
    end else begin
        data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        linebuffer_V_address0 = zext_ln203_46_fu_500_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        linebuffer_V_address0 = zext_ln203_48_fu_496_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        linebuffer_V_address0 = linebuffer_V_addr_1_reg_799;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        linebuffer_V_address0 = zext_ln187_9_fu_371_p1;
    end else begin
        linebuffer_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
        linebuffer_V_ce0 = 1'b1;
    end else begin
        linebuffer_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        linebuffer_V_d0 = linebuffer_V_load_reg_852;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        linebuffer_V_d0 = reg_275;
    end else begin
        linebuffer_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_state8) & (icmp_ln189_fu_397_p2 == 1'd1)))) begin
        linebuffer_V_we0 = 1'b1;
    end else begin
        linebuffer_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        output_V_address0 = zext_ln134_fu_728_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        output_V_address0 = zext_ln126_fu_639_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        output_V_address0 = zext_ln126_4_fu_631_p1;
    end else begin
        output_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17))) begin
        output_V_ce0 = 1'b1;
    end else begin
        output_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        output_V_d0 = reg_275;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        output_V_d0 = output_V_load_reg_912;
    end else begin
        output_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state19))) begin
        output_V_we0 = 1'b1;
    end else begin
        output_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        tmpinput_V_address0 = zext_ln203_50_fu_724_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        tmpinput_V_address0 = zext_ln203_44_fu_504_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tmpinput_V_address0 = zext_ln182_4_fu_367_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmpinput_V_address0 = tmp_fu_306_p3;
    end else begin
        tmpinput_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        tmpinput_V_ce0 = 1'b1;
    end else begin
        tmpinput_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        tmpinput_V_d0 = tmp_V_reg_804;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmpinput_V_d0 = data_V_load_reg_745;
    end else begin
        tmpinput_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state4))) begin
        tmpinput_V_we0 = 1'b1;
    end else begin
        tmpinput_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln177_fu_281_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln180_fu_315_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln189_fu_397_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln122_fu_508_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln124_fu_542_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln125_fu_588_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln131_fu_644_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln133_fu_686_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln126_13_fu_609_p2 = (zext_ln126_18_fu_605_p1 + sub_ln126_reg_883);

assign add_ln126_14_fu_600_p2 = (zext_ln126_15_reg_865 + zext_ln125_fu_584_p1);

assign add_ln126_15_fu_614_p2 = (add_ln126_reg_870 + zext_ln125_fu_584_p1);

assign add_ln126_16_fu_623_p2 = (zext_ln126_19_fu_619_p1 + sub_ln126_reg_883);

assign add_ln126_fu_536_p2 = (8'd64 + zext_ln126_15_fu_532_p1);

assign add_ln134_fu_710_p2 = (sub_ln134_reg_925 + zext_ln134_7_fu_706_p1);

assign add_ln182_fu_339_p2 = (zext_ln182_fu_335_p1 + zext_ln203_41_reg_757);

assign add_ln187_4_fu_362_p2 = (zext_ln187_8_fu_358_p1 + zext_ln203_41_reg_757);

assign add_ln187_fu_344_p2 = ($signed(i1_0_reg_197) + $signed(2'd3));

assign add_ln203_22_fu_461_p2 = (zext_ln203_41_reg_757 + zext_ln203_43_fu_457_p1);

assign add_ln203_23_fu_421_p2 = (zext_ln187_reg_793 + zext_ln203_45_fu_417_p1);

assign add_ln203_24_fu_479_p2 = (zext_ln203_reg_750 + tmp_40_cast_fu_472_p3);

assign add_ln203_25_fu_438_p2 = (zext_ln187_reg_793 + zext_ln203_47_fu_434_p1);

assign add_ln203_26_fu_491_p2 = (zext_ln203_reg_750 + tmp_43_cast_fu_484_p3);

assign add_ln203_27_fu_719_p2 = (zext_ln133_reg_930 + zext_ln203_49_fu_715_p1);

assign add_ln203_fu_387_p2 = (tmp_35_cast_fu_378_p4 + zext_ln203_reg_750);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign data_V_address0 = zext_ln179_fu_293_p1;

assign i0_4_fu_514_p2 = (i0_0_i_reg_220 + 2'd1);

assign i0_fu_287_p2 = (i0_0_reg_185 + 7'd1);

assign i1_7_fu_650_p2 = (i11_0_i_reg_253 + 2'd1);

assign i1_8_fu_548_p2 = (i1_0_i_reg_231 + 2'd1);

assign i1_fu_466_p2 = (i1_0_reg_197 + 2'd1);

assign i2_7_fu_692_p2 = (i22_0_i_reg_264 + 7'd1);

assign i2_8_fu_594_p2 = (i2_0_i_reg_242 + 7'd1);

assign i2_fu_403_p2 = (i2_0_reg_209 + 4'd1);

assign icmp_ln122_fu_508_p2 = ((i0_0_i_reg_220 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln124_fu_542_p2 = ((i1_0_i_reg_231 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln125_fu_588_p2 = ((i2_0_i_reg_242 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln131_fu_644_p2 = ((i11_0_i_reg_253 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln133_fu_686_p2 = ((i22_0_i_reg_264 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln177_fu_281_p2 = ((i0_0_reg_185 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln180_fu_315_p2 = ((i1_0_reg_197 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln189_fu_397_p2 = ((i2_0_reg_209 == 4'd14) ? 1'b1 : 1'b0);

assign or_ln_fu_698_p3 = {{1'd1}, {i22_0_i_reg_264}};

assign sext_ln126_4_fu_628_p1 = $signed(add_ln126_16_reg_902);

assign sext_ln126_fu_636_p1 = $signed(add_ln126_13_reg_897);

assign shl_ln126_5_fu_554_p3 = {{i1_0_i_reg_231}, {8'd0}};

assign shl_ln126_6_fu_566_p3 = {{i1_0_i_reg_231}, {6'd0}};

assign shl_ln134_3_fu_664_p3 = {{i11_0_i_reg_253}, {6'd0}};

assign shl_ln3_fu_656_p3 = {{i11_0_i_reg_253}, {8'd0}};

assign shl_ln_fu_524_p3 = {{trunc_ln126_fu_520_p1}, {6'd0}};

assign sub_ln126_fu_578_p2 = (zext_ln126_16_fu_562_p1 - zext_ln126_17_fu_574_p1);

assign sub_ln134_fu_676_p2 = (shl_ln3_fu_656_p3 - zext_ln134_6_fu_672_p1);

assign sub_ln195_fu_443_p2 = ($signed(2'd2) - $signed(i1_0_reg_197));

assign tmp_33_fu_327_p3 = {{xor_ln182_fu_321_p2}, {6'd0}};

assign tmp_34_fu_350_p3 = {{add_ln187_fu_344_p2}, {6'd0}};

assign tmp_35_cast_fu_378_p4 = {{{{4'd7}, {add_ln187_reg_772}}}, {6'd0}};

assign tmp_37_fu_449_p3 = {{sub_ln195_fu_443_p2}, {6'd0}};

assign tmp_38_fu_409_p3 = {{i2_0_reg_209}, {1'd0}};

assign tmp_40_cast_fu_472_p3 = {{add_ln203_23_reg_817}, {6'd0}};

assign tmp_41_fu_426_p3 = {{i2_fu_403_p2}, {1'd0}};

assign tmp_43_cast_fu_484_p3 = {{add_ln203_25_reg_822}, {6'd0}};

assign tmp_fu_306_p3 = {{57'd1}, {i0_0_reg_185}};

assign trunc_ln126_fu_520_p1 = i0_0_i_reg_220[0:0];

assign xor_ln182_fu_321_p2 = (i1_0_reg_197 ^ 2'd3);

assign zext_ln125_fu_584_p1 = i2_0_i_reg_242;

assign zext_ln126_15_fu_532_p1 = shl_ln_fu_524_p3;

assign zext_ln126_16_fu_562_p1 = shl_ln126_5_fu_554_p3;

assign zext_ln126_17_fu_574_p1 = shl_ln126_6_fu_566_p3;

assign zext_ln126_18_fu_605_p1 = add_ln126_14_fu_600_p2;

assign zext_ln126_19_fu_619_p1 = add_ln126_15_fu_614_p2;

assign zext_ln126_4_fu_631_p1 = $unsigned(sext_ln126_4_fu_628_p1);

assign zext_ln126_fu_639_p1 = $unsigned(sext_ln126_fu_636_p1);

assign zext_ln133_fu_682_p1 = shl_ln134_3_fu_664_p3;

assign zext_ln134_6_fu_672_p1 = shl_ln134_3_fu_664_p3;

assign zext_ln134_7_fu_706_p1 = or_ln_fu_698_p3;

assign zext_ln134_fu_728_p1 = add_ln134_reg_943;

assign zext_ln179_fu_293_p1 = i0_0_reg_185;

assign zext_ln182_4_fu_367_p1 = add_ln182_reg_767;

assign zext_ln182_fu_335_p1 = tmp_33_fu_327_p3;

assign zext_ln187_8_fu_358_p1 = tmp_34_fu_350_p3;

assign zext_ln187_9_fu_371_p1 = add_ln187_4_reg_778;

assign zext_ln187_fu_375_p1 = add_ln187_reg_772;

assign zext_ln203_41_fu_302_p1 = i0_0_reg_185;

assign zext_ln203_42_fu_392_p1 = add_ln203_fu_387_p2;

assign zext_ln203_43_fu_457_p1 = tmp_37_fu_449_p3;

assign zext_ln203_44_fu_504_p1 = add_ln203_22_reg_827;

assign zext_ln203_45_fu_417_p1 = tmp_38_fu_409_p3;

assign zext_ln203_46_fu_500_p1 = add_ln203_24_reg_837;

assign zext_ln203_47_fu_434_p1 = tmp_41_fu_426_p3;

assign zext_ln203_48_fu_496_p1 = add_ln203_26_reg_842;

assign zext_ln203_49_fu_715_p1 = i22_0_i_reg_264;

assign zext_ln203_50_fu_724_p1 = add_ln203_27_reg_948;

assign zext_ln203_fu_298_p1 = i0_0_reg_185;

always @ (posedge ap_clk) begin
    zext_ln203_reg_750[11:7] <= 5'b00000;
    zext_ln203_41_reg_757[8:7] <= 2'b00;
    zext_ln187_reg_793[5:2] <= 4'b0000;
    zext_ln126_15_reg_865[5:0] <= 6'b000000;
    zext_ln126_15_reg_865[7] <= 1'b0;
    add_ln126_reg_870[5:0] <= 6'b000000;
    sub_ln126_reg_883[5:0] <= 6'b000000;
    sub_ln134_reg_925[5:0] <= 6'b000000;
    zext_ln133_reg_930[5:0] <= 6'b000000;
    zext_ln133_reg_930[8] <= 1'b0;
end

endmodule //cnnshift_arr_buffer_ap_fixed_ap_fixed_config12_s
